## https://leetcode.com/problems/search-a-2d-matrix/
## Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.
 

Example 1:


Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true
Example 2:


Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13
Output: false
 

Constraints:

m == matrix.length
n == matrix[i].length
1 <= m, n <= 100
-104 <= matrix[i][j], target <= 104


## Solution


class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        rstart = 0
        rend = len(matrix) - 1          # no of rows
        cend = len(matrix[0]) - 1       # no of columns
        
        if rend < 0:
            return False
        else:
            while rstart <= rend:
                rmid = ( rstart + rend )//2

                #remove rows with elements lesser than target that would be present in row above
                if matrix[rmid][0] < target:
                    rstart = rmid + 1
                    
                #remove rows with elements greater than target that would be present in row below
                if matrix[rmid][cend] > target:
                    rend = rmid - 1
                    
                #if present in the current row
                if matrix[rmid][0] < target and matrix[rmid][cend] > target:
                    #binary search in the row
                    cstart = 0
                    while cstart <= cend:
                        cmid = ( cstart + cend )//2
                        if matrix[rmid][cmid] == target:
                            return True
                        elif matrix[rmid][cmid] < target:
                            cstart = cmid + 1
                        else:
                            cend = cmid - 1
                    return False

                #present at first column of current row
                elif matrix[rmid][0] == target:
                    return True
                #present at last column of current row
                elif matrix[rmid][cend] == target:
                    return True
